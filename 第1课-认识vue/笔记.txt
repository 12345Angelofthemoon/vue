缓存：前端、后端协商
cache-control

vue运行机制是啥：
1.数据 -> 视图
2.模板
3.响应式
4.双向绑定

前端怎么设置缓存

--------------------------------------------------------------------------------

vue：
干啥的？

数据和视图双向绑定

--------------------------------------------------------------------------------

vue生态圈：
1.vue.js
2.webpack、vue-loader
3.vue-cli
4.vue-devtools
5.vue-router
6.vuex
7.vue-server-renderer
8.element-UI

--------------------------------------------------------------------------------

三大框架：
vue       最易用   较高
react     易用     最高
angular   难用     一般

--------------------------------------------------------------------------------

1.vue最基本
let vm=new Vue({
  el: '',
  data: {

  },
  methods: {
    fn(){
      alert('dsfasd')
    }
  }
});

2.vue表达式
  {{}}

--------------------------------------------------------------------------------

vue指令——自定义html属性
v-bind:attr="表达式"   输出到属性
v-model 双向绑定

v-text、v-html

--------------------------------------------------------------------------------

v-for="item,index in arr"
v-for="val,key in json"

--------------------------------------------------------------------------------

key=>唯一、不变

性能
虚拟DOM
1.读取——从虚拟DOM
2.写入——汇总

真实DOM(html)
oDiv.style.background='red';    4000
a++;

{
  tag: 'ul',
  children: [
    {tag: 'li', children: []},
    {tag: 'li', children: []},
    {tag: 'li', children: []},
  ]
}


<ul>
  <li>
    <a href="xxx" />
  </li>
  <li>
    <a href="xxx" />
  </li>
  <li>
    <a href="xxx" />
  </li>
</ul>

--------------------------------------------------------------------------------

vue响应式数据

vm.$set(数据, key, value)

vm.arr[0]=998;
vm.$set(vm.arr, 0, 998);

--------------------------------------------------------------------------------

无法响应的操作：
1.数组直接用下标修改
2.json添加、删除
3.Object.assign

vm.$set(vm.xxx, 'x', xxx);

--------------------------------------------------------------------------------

{{}}
v-bind——输出属性
v-html——输出原始html
v-for——循环

--------------------------------------------------------------------------------

v-if    删除元素
v-show  隐藏元素

v-if
v-else
v-else-if

--------------------------------------------------------------------------------

事件
v-on:click="fn()"

@click="fn"     自动event作为唯一参数
@click="fn()"   参数按照传递
  $event

--------------------------------------------------------------------------------

事件修饰符
事件添加功能

--------------------------------------------------------------------------------

.stop     停止冒泡
.prevent  阻止默认事件
.self     不接受冒泡事件
.once     单次事件

--------------------------------------------------------------------------------

指令：
v-bind
v-model
v-text,v-html
v-for :key
v-if v-else v-else-if
v-on  @click=""

--------------------------------------------------------------------------------

v-pre   提升性能——禁用vue编译
v-once  提升性能——vue只编译一次
v-cloak 遮蔽

--------------------------------------------------------------------------------
