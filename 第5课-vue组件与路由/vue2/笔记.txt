$emit       发送事件
$on  v-on:  接收事件
$once v-on:xxx.once   单次事件

--------------------------------------------------------------------------------

子组件：
{
  props: ['name', 'age']
}

参数约束：
规范参数——类型、必填、默认值、校验
props: {
  数据名: {
    type: 任何类型、自定义都行,
    required: 必填,
    default: 默认,
    validator(value){
      ...

      return false;
    }
  }
}

--------------------------------------------------------------------------------

子组件需要修改父级的数据
1.事件——稳妥、麻烦
2.子级直接改——绝对不要
  不明显
3.v-model——明显了、只能是一个
  v-model = :value + @input
4. sync修饰符
  子级触发$emit('update:参数名', 新值)

--------------------------------------------------------------------------------

插槽  <slot/>
占位符

--------------------------------------------------------------------------------


<!-- <cmp1 v-model="a" /> -->
<!-- <cmp1 :value="a" @input="num=>a=num" /> -->

<!-- <br/> -->
<!-- <input type="text" v-model="a"> -->
<!-- <input type="text" :value="a" @input="a=$event.target.value"> -->

<cmp1 :num1.sync="a" :num2.sync="b" :num3.sync="c" />

--------------------------------------------------------------------------------

Router路由：判断——根据地址不同，显示不同组件

<IndexPage v-if="url=='/'" />
<ListPage v-if="url=='/list'" />
<DetailPage v-if="url=='/item'" />

--------------------------------------------------------------------------------

怎么回事儿：
1.路由表：地址->组件  / -> index      /news -> news
  new Router({
    routes: [
      {path: 地址, component: 组件, meta, children: [
        {path, component},
        {path, component, children}
      ]}
    ]
  });

2.路由容器：占位符 -> 实际组件
  <router-view/>

3.跳转：
  - a链接——不推荐
  - router-link——推荐
    <router-link to="哪儿" />
  - js操作跳转    push/replace
    $router.push(哪儿)

--------------------------------------------------------------------------------

样式
router-link-exact-active router-link-active


/news
/     router-link-active
/news router-link-active router-link-exact-active


/shop
/shop/man

--------------------------------------------------------------------------------

路由模式：
1.history   Html5 history API
  地址变，但页面不刷新

2.hash      #
  页面也不刷新

3.abstract  路由状态存在内存
  方便后台渲染

--------------------------------------------------------------------------------

组件什么时候更新：
1.data变了
2.父级参数变了
3.强制更新
